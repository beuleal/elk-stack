input {
    beats {
        port => "5044"
    }
}

filter {

    # Tests with appName field
    mutate {
        id => "createName"
        add_field => {
            "name" => "TeStTesT"
        }
    }

    if ![appName]  {
        mutate {
            id => "addName"
            add_field => {
                "name" => "someone"
            }
        }
    }
    else {
        mutate {
            lowercase => ["name"]
        }
    }

    ruby {
        id => 'get_event_size'
        code => 'logger.info("Start truncate_message filter")

        event_size = event.to_json.size
        event.set("event_size", event_size)
        max_size = (ENV["MAX_MESSAGE_SIZE_BYTES"].nil? ? 300E3 : ENV["MAX_MESSAGE_SIZE_BYTES"].to_i)

        max_event_size_multiplier = (ENV["MAX_EVENT_SIZE_MULTIPLIER"].nil? ? 2.5 : ENV["MAX_EVENT_SIZE_MULTIPLIER"].to_f)
        event.set("max_event_size", max_size.to_f * max_event_size_multiplier.to_f)
        '
    }

    if [event_size] > [max_event_size] {

        discard_event {
            id => 'discard_event filter'
            keys => [
            "field1",
            "field2",
            "field3"
            ]

            debug => "${DEBUG_EVENT_DISCARD:false}"
        }
    }
}

output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
    }
}
